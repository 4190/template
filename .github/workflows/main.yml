# This workflow builds, tests, and deploys three separate applications:
# 1. A .NET application
# 2. A Java (Spring Boot) application
# 3. An Angular application
# It builds each application, creates a Docker image, pushes it to Docker Hub,
# and finally deploys the changes to a Kubernetes cluster.

name: Build and Deploy Full Stack Application

on:
  push:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    # Use a GitHub-hosted runner with the latest Ubuntu version
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up all necessary environments (Java, .NET, Node.js)
      - name: Set up JDK 17 for Java build
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Set up .NET 8 for .NET build
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Set up Node.js for Angular build
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Step 3: Log in to Docker Hub
      # This uses secrets to securely log in without exposing your credentials.
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --- .NET Application CI/CD ---
      - name: Restore .NET dependencies
        run: dotnet restore Template
        
      - name: Build .NET project
        run: dotnet build --no-restore Template
        
      - name: Build and push .NET Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./Template # Directory of the .NET project
          file: ./Template/Template/Dockerfile # Path to the Dockerfile
          push: true
          tags: saeqis/template:${{ github.sha }}, saeqis/template:latest

      # --- Java Application CI/CD ---
      - name: Make mvnw executable
        run: chmod +x ./mvnw
        working-directory: ./java-1

      - name: Build Java project with Maven
        run: ./mvnw clean package
        working-directory: ./java-1

      - name: Build and push Java Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./java-1
          push: true
          tags: saeqis/java-1:${{ github.sha }}, saeqis/java-1:latest

      # --- Angular Application CI/CD ---
      - name: Install Angular dependencies
        run: npm ci
        working-directory: ./angular-1

      - name: Build Angular project
        run: npm run build
        working-directory: ./angular-1

      - name: Build and push Angular Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./angular-1
          push: true
          tags: saeqis/angular-frontend:${{ github.sha }}, saeqis/angular-frontend:latest

      # --- Kubernetes Deployment ---
      - name: Set up kubectl
        uses: azure/k8s-set-context@v4
        with:
          # This secret contains the configuration for your remote Kubernetes cluster
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
        id: setcontext

      - name: Apply Kubernetes manifests
        run: kubectl apply -f K8S/Deploy

      - name: Rollout restart deployments
        run: |
          kubectl rollout restart deployment template-depl
          kubectl rollout restart deployment java-1-depl
          kubectl rollout restart deployment angular-frontend-depl

